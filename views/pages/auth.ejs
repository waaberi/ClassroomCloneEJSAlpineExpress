<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include('../partials/head', { title: "Authentication Page" }) %>
    </head>
    <body x-data="{ isSignin: false, message: '', error: false }" class="bg-gray-100">
        <div class="flex items-center justify-center min-h-screen">
            <div class="bg-white shadow-md rounded px-8 py-6">
                <h2 class="text-2xl font-bold mb-4" x-text="isSignin ? 'Sign In' : 'Sign Up'">Authentication</h2>
                <div x-show="isSignin">
                    <form id="signinContainer" x-on:submit.prevent="submitForm">
                        <div class="mb-4">
                            <label for="email" class="block text-gray-700 text-sm font-bold mb-2">Email:</label>
                            <input type="email" id="email" name="email" required class="border rounded px-3 py-2 w-full">
                        </div>
                        <div class="mb-4">
                            <label for="password" class="block text-gray-700 text-sm font-bold mb-2">Password:</label>
                            <input type="password" id="password" name="password" required class="border rounded px-3 py-2 w-full">
                        </div>
                        <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Sign In</button>
                    </form>
                </div>
                <div x-show="!isSignin">
                    <form id="signupContainer" x-on:submit.prevent="submitForm">
                        <div class="mb-4">
                            <label for="firstname" class="block text-gray-700 text-sm font-bold mb-2">First Name:</label>
                            <input type="text" id="firstName" name="firstName" required class="border rounded px-3 py-2 w-full">
                        </div>
                        <div class="mb-4">
                            <label for="lastname" class="block text-gray-700 text-sm font-bold mb-2">Last Name:</label>
                            <input type="text" id="lastName" name="lastName" required class="border rounded px-3 py-2 w-full">
                        </div>
                        <div class="mb-4">
                            <label for="email" class="block text-gray-700 text-sm font-bold mb-2">Email:</label>
                            <input type="email" id="email" name="email" required class="border rounded px-3 py-2 w-full">
                        </div>
                        <div class="mb-4">
                            <label for="password" class="block text-gray-700 text-sm font-bold mb-2">Password:</label>
                            <input type="password" id="password" name="password" required class="border rounded px-3 py-2 w-full">
                        </div>
                        <div class="mb-4">
                            <label for="role" class="block text-gray-700 text-sm font-bold mb-2">Role:</label>
                            <select id="role" name="role" required class="border rounded px-3 py-2 w-full">
                                <option value="student">Student</option>
                                <option value="teacher">Teacher</option>
                            </select>
                        </div>
                        <button type="submit" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Sign Up</button>
                    </form>
                </div>
                <p class="text-sm text-center mt-4">
                    <span x-text="isSignin ? 'Need an account?' : 'Already have an account?'"></span>
                    <a href="#" x-on:click="isSignin=!isSignin" x-text="isSignin ? 'Sign Up' : 'Sign In'"></a>
                </p>
                <p id="message" x-text="message" x-bind:class="{ 'text-red-500': error, 'text-green-500': !error }" class="text-center font-bold mt-2"></p>
                <script>
                    async function submitForm() {
                        const formData = new FormData(document.querySelector(this.isSignin ? '#signinContainer' : '#signupContainer'));

                        // Convert FormData to JSON
                        let jsonObject = {};
                        for (const [key, value] of formData.entries()) jsonObject[key] = value;

                        try {
                            const response = await axios({
                                method: 'post',
                                url: `/auth/${this.isSignin ? 'signin' : 'signup'}`,
                                data: jsonObject,
                                headers: { 'Content-Type': 'application/json' },
                            });
                            this.error = false;
                            this.message = response.data.message;
                            setTimeout(() => window.location.href = "/", 500);
                        } catch (error) {
                            this.error = true;
                            this.message = error.response.data.message;
                        }
                    }
                </script>
            </div>
        </div>
    </body>
</html>
